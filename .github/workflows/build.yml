name: "[Internal CI][Master] Build Workflow"

on:
  workflow_call:
    inputs:
      devel:
        description: 'Development mode (disables update checker, adds nightly qualifier)'
        type: boolean
        default: true
      build-id:
        description: 'Identifier for workflows and caching'
        type: string
        default: 'master'

env:
  DISABLE_ARM: ${{ vars.DISABLE_ARM }}
  SCCACHE_GHA_ENABLED: "true"
  CCACHE: "true"
  CPM_CACHE_VERSION: "v8"
  FORGEJO_TOKEN: ${{ secrets.FORGEJO_TOKEN }}
  DEVEL: ${{ inputs.devel }}
  TEMP_PATCH_STATUS: "false"
  TEMP_PATCH: "2755"

jobs:
  clone:
    outputs:
      cachever: ${{ steps.out.outputs.cachever }}
    name: "Parse and Clone"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
        with:
          fetch-depth: 0

      - name: Send Commit Status to Forgejo
        if: ${{ inputs.build-id == 'master' || inputs.build-id == 'pull_request' }}
        shell: bash
        run: |
          export FORGEJO_REPO="${{ github.event.client_payload.repository }}"
          export FORGEJO_REF="${{ github.event.client_payload.ref }}"
          python ./.ci/common/status.py pending

      - name: Parse Forgejo payload
        shell: bash
        run: |
          echo '${{ toJSON(github.event.client_payload) }}' > ./payload.json
          cat payload.json
          ./.ci/forgejo.sh --parse ${{ inputs.build-id }}

      - name: Load payload environment
        shell: bash
        run: |
          . ./.ci/fj/load-env.sh

      # for some amazing reason you can't pass env vars to reusable workflows
      - name: Setup Outputs
        id: out
        shell: bash
        run: |
          echo "cachever=${CPM_CACHE_VERSION}" >> "$GITHUB_OUTPUT"

      - name: Clone
        shell: bash
        run: |
          ./.ci/forgejo.sh --clone ${{ inputs.build-id }}

      - name: Apply Temporary Patch
        if: ${{ env.TEMP_PATCH_STATUS == 'true' }}
        shell: bash
        run: |
          wget https://git.eden-emu.dev/eden-emu/eden/pulls/${TEMP_PATCH}.patch
          git -C eden apply ../${TEMP_PATCH}.patch
          rm ${TEMP_PATCH}.patch

      - name: Summary
        shell: bash
        run: |
          ./.ci/fj/summary.sh ${{ inputs.build-id }}

      - name: Cleanup
        run: |
          rm -rf eden/.git* eden/.ci eden/.github

      - name: Upload payload environment
        uses: actions/upload-artifact@v4.6.2
        with:
          name: forgejo-env
          path: forgejo.env

      - name: Upload cloned repo
        uses: actions/upload-artifact@v4.6.2
        with:
          name: eden
          include-hidden-files: true
          path: |
            eden/*
            eden/.patch

  source:
    name: "Source Pack"
    runs-on: ubuntu-latest
    needs: [clone]

    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0

      - name: Clone
        uses: actions/download-artifact@v5.0.0

      - name: Build
        run: ./.ci/source/build.sh

      - name: Package
        run: ./.ci/source/package.sh

      - name: Upload source
        uses: actions/upload-artifact@v4.6.2
        with:
          name: source
          path: source.*

  deb:
    name: ".deb builds"
    needs: [clone]
    uses: ./.github/workflows/deb.yml
    with:
      build-id: '${{ inputs.build-id }}'
      cpm-cache-version: '${{ needs.clone.outputs.cachever }}'
      devel: ${{ inputs.devel }}
    secrets: inherit

  linux:
    name: "AppImage"
    needs: [clone]
    uses: ./.github/workflows/appimage.yml
    with:
      build-id: '${{ inputs.build-id }}'
      cpm-cache-version: '${{ needs.clone.outputs.cachever }}'
      devel: ${{ inputs.devel }}
    secrets: inherit

  windows:
    name: "Windows"
    needs: [clone]
    uses: ./.github/workflows/windows.yml
    with:
      build-id: '${{ inputs.build-id }}'
      cpm-cache-version: '${{ needs.clone.outputs.cachever }}'
      devel: ${{ inputs.devel }}
    secrets: inherit

  android:
    name: "Android"
    needs: [clone]
    uses: ./.github/workflows/android.yml
    with:
      build-id: '${{ inputs.build-id }}'
      cpm-cache-version: '${{ needs.clone.outputs.cachever }}'
      devel: ${{ inputs.devel }}
    secrets: inherit

  macos:
    name: "macOS"
    needs: [clone]
    uses: ./.github/workflows/macos.yml
    with:
      build-id: '${{ inputs.build-id }}'
      cpm-cache-version: '${{ needs.clone.outputs.cachever }}'
      devel: ${{ inputs.devel }}
    secrets: inherit

  unix:
    name: "UNIX"
    needs: [clone]
    uses: ./.github/workflows/unix.yml
    with:
      build-id: '${{ inputs.build-id }}'
      cpm-cache-version: '${{ needs.clone.outputs.cachever }}'
      devel: ${{ inputs.devel }}
    secrets: inherit

  status-if-cancelled:
    name: "Send Cancelled Commit Status to Forgejo"
    needs: [source, deb, linux, windows, android, macos, unix]
    if: ${{ always() && cancelled() && ((inputs.build-id || '') == 'master' || (inputs.build-id || '') == 'pull_request') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5.0.0
      - name: Load payload env and send status
        run: |
          export FORGEJO_REPO="${{ github.event.client_payload.repository }}"
          export FORGEJO_REF="${{ github.event.client_payload.ref }}"
          python3 ./.ci/common/status.py error

  status-if-failure:
    name: "Send Failure Commit Status to Forgejo"
    needs: [source, deb, linux, windows, android, macos, unix]
    if: ${{ always() && failure() && ((inputs.build-id || '') == 'master' || (inputs.build-id || '') == 'pull_request') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5.0.0
      - name: Load payload env and send status
        run: |
          export FORGEJO_REPO="${{ github.event.client_payload.repository }}"
          export FORGEJO_REF="${{ github.event.client_payload.ref }}"
          python3 ./.ci/common/status.py failure

  status-if-success:
    name: "Send Success Commit Status to Forgejo"
    needs: [source, deb, linux, windows, android, macos, unix]
    if: ${{ always() && success() && ((inputs.build-id || '') == 'master' || (inputs.build-id || '') == 'pull_request') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5.0.0
      - name: Load payload env and send status
        run: |
          export FORGEJO_REPO="${{ github.event.client_payload.repository }}"
          export FORGEJO_REF="${{ github.event.client_payload.ref }}"
          python3 ./.ci/common/status.py success
