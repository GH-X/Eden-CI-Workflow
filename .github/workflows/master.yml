name: "[Auto] Build on push to 'master'"

on:
  repository_dispatch:
    types: [master]

env:
  DISABLE_ARM: ${{ vars.DISABLE_ARM }}

jobs:
  build:
    name: Build
    concurrency:
      group: master-build
      cancel-in-progress: false
    uses: ./.github/workflows/build.yml
    with:
      build-id: 'master'
    secrets: inherit

  release:
    name: "Create Release"
    needs: [build]
    permissions:
      actions: read
      security-events: write
      contents: write
      discussions: write

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5.0.0
        with:
          persist-credentials: false

      - name: Download artifacts
        uses: actions/download-artifact@v5.0.0

      - name: Load payload environment
        shell: bash
        run: |
          export FORGEJO_LENV=forgejo-env/forgejo.env
          . ./.ci/common/load-env.sh --load-payload-env

      - name: Set environment variables
        run: |
          echo "REPO=Eden-CI/Master" >> $GITHUB_ENV
          echo "DEVEL=true" >> $GITHUB_ENV
          echo "TIMESTAMP=$(date +%s)" >> $GITHUB_ENV

      - name: Package artifacts nicely
        run: |
          export ID=${FORGEJO_REF}
          ./pack.sh

      - name: Delete Previous Release
        run: |
          gh release delete "continuous" --repo "$REPO" --cleanup-tag  -y
          sleep 5
        env:
          GH_TOKEN: "${{ secrets.CUSTOM_GITHUB_TOKEN }}"
        continue-on-error: true

      - name: Generate changelog
        run: ./.ci/changelog/generate.sh master > changelog.md

      - name: Release
        id: release
        uses: softprops/action-gh-release@v2.2.2
        with:
          name: "Eden Master - ${{ env.FORGEJO_REF }}"
          tag_name: v${{ env.TIMESTAMP }}.${{ env.FORGEJO_REF }}
          repository: ${{ env.REPO }}
          body_path: ./changelog.md
          prerelease: false
          draft: false
          generate_release_notes: false
          token: ${{ secrets.CUSTOM_GITHUB_TOKEN }}
          fail_on_unmatched_files: false
          make_latest: true
          files: |
            artifacts/*

      - name: Add release URL to summary
        run: |
          {
            echo "## Release Summary"
            echo ""
            echo "- View Release on GitHub: [Master](${{ steps.release.outputs.url }})"
            echo ""
          } > RELEASE_GITHUB_STEP_SUMMARY.md
          cat "$GITHUB_STEP_SUMMARY" > OLD_GITHUB_STEP_SUMMARY.md
          cat RELEASE_GITHUB_STEP_SUMMARY.md OLD_GITHUB_STEP_SUMMARY.md > "$GITHUB_STEP_SUMMARY"

      - name: Send release URL to status
        run: |
          python3 ./.ci/common/status.py release ${{ steps.release.outputs.url }}
